<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="api">
	<insert id="searchWeatherLogInsert" parameterType="com.hostate.api.vo.Tb_weather_search_scope_info">
		insert into tb_weather_search_scope_info(
			user_id,
		    user_name,
		    start_date,
		    end_date,
		    create_date,
		    create_user_name,
		    update_date,
		    update_user_name
		    )
		values(
			#{user_id},
			#{user_name}, 
			#{start_date}, 
			#{end_date},
			now(),
			#{user_name},
			now(),
			#{user_name}
			);
	</insert>
	
	<select id="selectSearchInfo" parameterType="com.hostate.api.vo.Tb_weather_search_scope_info" resultType="com.hostate.api.vo.Tb_weather_search_scope_info">
		select 
			numrow,
			user_id, 
			user_name,
			start_date,
			end_date,
			create_date
		from (
		        select
					 ROW_NUMBER() OVER(ORDER BY no desc) AS numrow,
					 user_id as user_id,
					 user_name as user_name,
					 start_date as start_date,
					 end_date as end_date,
					 create_date as create_date
			    from tb_weather_search_scope_info
	            )t
		WHERE numrow BETWEEN (#{pageNo}-1)*10 + 1 AND (#{pageNo})*10;
	</select>
	
	<select id="selectTotalCnt" parameterType="com.hostate.api.vo.Tb_weather_search_scope_info" resultType="Integer">
		select count(no) AS total_cnt
		from tb_weather_search_scope_info
	</select>
	
	<select id="getUsersList" resultType="com.hostate.api.vo.Tb_User_InfoVO">
		select distinct user_name, user_id 
		from tb_weather_search_scope_info
		ORDER BY user_name asc
	</select>
	
	<select id="getUserId" parameterType="String" resultType="String">
		select distinct user_id
		from tb_weather_search_scope_info
		where user_id = #{user_id}
	</select>
	
	<select id="getselectAXUser" parameterType="com.hostate.api.vo.Tb_User_InfoVO" resultType="com.hostate.api.vo.Tb_weather_search_scope_info">
		select 
			user_name as user_name, 
			crDate as create_date, 
			totalCnt
		from
			(
				select user_name, DATE_FORMAT(create_date, "%Y-%m-%d") as crDate, count(*) as totalCnt
				from tb_weather_search_scope_info
				<if test="user_id != null and !user_id.equals('')">
					where user_id = #{user_id}				
				</if>
				group by DATE_FORMAT(create_date, "%Y-%m-%d") , user_name
				order by user_name, create_date
		    ) t
		where crDate between (#{start_date}) AND (#{end_date});
	</select>
	
</mapper>
